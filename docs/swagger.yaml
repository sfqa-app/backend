basePath: /
definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  models.User:
    description: User account
    properties:
      age:
        type: integer
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
    type: object
  models.UserInfo:
    description: User account info
    properties:
      age:
        type: integer
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: sfqa-app api documentation
  license:
    name: GPL-3.0
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
  termsOfService: http://swagger.io/terms/
  title: sfqa-app docs
  version: "1.0"
paths:
  /user:
    delete:
      consumes:
      - application/json
      description: Delete user account
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Delete user
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Create new user account
      parameters:
      - description: User info
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.UserInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema: {}
      summary: Create user
      tags:
      - User
  /user/{id}:
    get:
      consumes:
      - application/json
      description: Get user account
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema: {}
      summary: Get user
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update user account info
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.UserInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Update user account info
      tags:
      - User
swagger: "2.0"
